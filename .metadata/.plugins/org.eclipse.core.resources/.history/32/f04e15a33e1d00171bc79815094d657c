package datastructures;

import java.util.Iterator;
import java.util.TreeSet;

import algorithm.Edge;
import algorithm.Endpoint;

public class StatusTreeSet extends TreeSet<Edge>{

	static TreeSet<Edge> tree = new TreeSet<Edge>();
	

	public static void statusTreeSet(){
		
		
		//Small test on ordering and compareTo of Edge
		
		//1. A vertical Edge to the left
		Endpoint start1 = new Endpoint(1, 1);
		Endpoint end1 = new Endpoint(1, 300);
		Edge e1 = new Edge(start1, end1);
		
		//2. A vertical Edge to the right
		Endpoint start2 = new Endpoint(300, 1);
		Endpoint end2 = new Endpoint(300, 300);
		Edge e2 = new Edge(start2, start2);
		
		//Add them to the TreeSet
		tree.add(e2);
		tree.add(e1);
		
		//Check the order in the status
		traverseStatus();
		
	}
	
	
	public static void traverseStatus(){
		System.out.println("========================================\nTRAVERSE STATUS\n========================================");
		Iterator<Edge> iterator = tree.iterator();
		while(iterator.hasNext()){
			Edge edge = iterator.next();
			System.out.println("Edge upper: (" + edge.getUpper().getX() + ", " + edge.getUpper().getRealY() + ") | Edge lower: " + edge.getLower().getX() + ", " + edge.getLower().getRealY() + ") | Current X: " + edge.current_X);
		}
	}	
}

